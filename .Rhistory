"border": "2px solid #000000",
"border-radius": "10px",
"color":"white",
"fontweight":"bold"
});
return table;
')
,
extensions = c('Buttons', 'Scroller','FixedColumns'),
options = list(
scrollY = 500,
scroller = TRUE,
dom = 'Bfrtip',
scrollX = TRUE,
fixedColumns = TRUE,
buttons = list( list(extend = "copy", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="14" viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M384 336H192c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16l140.1 0L400 115.9V320c0 8.8-7.2 16-16 16zM192 384H384c35.3 0 64-28.7 64-64V115.9c0-12.7-5.1-24.9-14.1-33.9L366.1 14.1c-9-9-21.2-14.1-33.9-14.1H192c-35.3 0-64 28.7-64 64V320c0 35.3 28.7 64 64 64zM64 128c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H256c35.3 0 64-28.7 64-64V416H272v32c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16H96V128H64z"/></svg>'),
list(extend = "csv", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="16" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V274.7l-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7V32zM64 352c-35.3 0-64 28.7-64 64v32c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V416c0-35.3-28.7-64-64-64H346.5l-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352H64zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z"/></svg>')) ,
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3A5311', 'color': '#fff'});",
"}")))%>% formatStyle(
c("Allocation reult","Warning message"), "white-space" = "pre-line"
) %>% formatStyle("Warning message",
color = "red") %>%
formatRound(c("Net profit","Consol CBM"),digits = 2)%>%
formatString("Consol CBM", suffix= HTML(' m<sup>3</sup>')) %>%
formatCurrency("Net profit")
tb_model
runApp('AMESdashboard')
runApp('AMESdashboard')
example_join<- left_join(example_join, example_sum_ndc,  by = c("Supplier.Factory.code"))%>%
mutate(allocation_result_node1 = case_when(
allocation_result_node_pr  %in% c("NDC","Other strategy to wait for FCL consolidation")& consolidated_cbm >40 ~ "NDC",
TRUE~allocation_result_node_pr),
Warning_message= case_when( cbm <= 0 ~"No or wrong predictive orders detected, please check your data.",
allocation_result_node1=="Other strategy to wait for FCL consolidation"~ "Warning: The maximium of  consolidation cannot fulfill FCL. Other strategy  is required",
consolidated_pkg_utilization<=80~" Warning: This batch of shipment carries highair volumes."))
runApp('AMESdashboard')
runApp('AMESdashboard')
library(shiny)
library(shinydashboard)
library(tidyverse)
library(lubridate)
library(shinydashboardPlus)
library(fpp3)
library(htmltools)
library(dygraphs)
library(plotly)
library(shinyWidgets)
library(DT)
library(readxl)
library(shinycssloaders)
library(tools)
library(xgboost)
gc()
knitr::opts_chunk$set(echo = FALSE,eval =TRUE, message =FALSE, warning =FALSE)
example<-read_xlsx("data/AMES_example.xlsx")
## library package
library(tidyverse)
library(fpp3)
library(readxl)
library(janitor)
library(plotly)
library(DT)
library(knitr)
library(colorspace)
library(kableExtra)
example<-read_xlsx("data/AMES_example.xlsx")
example_mt<- example |> filter( rowSums(example[, 11:53])!=0) |>
pivot_longer(-c(`Item & Region`:Cost), names_to = "Date", values_to ="Volume") |>  separate(Date,c("Month", "Year")) |>
mutate(Yearmonth = paste(Year, Month),
Yearmonth =yearmonth(Yearmonth),
`Item Code` =factor(`Item Code`),
Month =factor(Month, levels =month.abb))
example_tsb |> model(ETS=ETS(Volume),
ARIMA =ARIMA(Volume)) |>
forecast(h = 6)
example_tsb<-  example_mt |> as_tsibble(index =Yearmonth, key =c(Region, `Item Code`))
example_tsb_model<-example_tsb |> model(ETS=ETS(Volume),
ARIMA =ARIMA(Volume)) |>
forecast(h = 6)
example_tsb_model
write.csv(example_tsb_model, "data/forecast.csv")
example_tsb_model
example_tsb_model%>%  as.tibble() %>% mutate(Volume = as.character(Volume)) %>% rename(model =Cement,
=.mean，
example_tsb_model%>%  as.tibble() %>% mutate(Volume = as.character(Volume)) %>% rename(model =Volume,
Volume=.mean，
example_tsb_model%>%  as.tibble() %>% mutate(Volume = as.character(Volume)) %>% rename(model =Volume,
Volume=.mean,
model =.model)
example_tsb_model%>%  as.tibble() %>% mutate(Volume = as.character(Volume)) %>% rename(Dist =Volume,
Volume=.mean,
model =.model)
example_tsb_model%>%  as.tibble() %>% mutate(Volume = as.character(Volume)) %>% rename(Dist =Volume,
Volume=.mean,
Model =.model)
example_tsb_model_tb<- example_tsb_model%>%  as.tibble() %>% mutate(Volume = as.character(Volume)) %>% rename(Distribution =Volume,
Volume=.mean,
Model =.model)
example_tsb_model_tb
example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(range ,
"(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume- 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt |> datatable()
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt |>  |>
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt  |>
mutate(`RDC Pallet` =if_else(POD== "AUMEL",NA,`RDC Pallet`),
`RDC CBM`=if_else(POD== "AUMEL",NA,`RDC CBM`))
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt |>  datatable(
callback=JS('
$("button.buttons-copy").css({
"background": "#81D8D0",
"border": "2px solid #000000",
"color":"white",
"fontweight":"bold",
"border-radius": "10px"
});
$("button.buttons-csv").css({
"background": "#FF7900",
"border": "2px solid #000000",
"border-radius": "10px",
"color":"white",
"fontweight":"bold"
});
return table;
')
,
extensions = c('Buttons', 'Scroller','FixedColumns'),
options = list(
scrollY = 200,
scroller = TRUE,
dom = 'Bfrtip',
scrollX = TRUE,
fixedColumns = TRUE,
buttons = list( list(extend = "copy", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="14" viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M384 336H192c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16l140.1 0L400 115.9V320c0 8.8-7.2 16-16 16zM192 384H384c35.3 0 64-28.7 64-64V115.9c0-12.7-5.1-24.9-14.1-33.9L366.1 14.1c-9-9-21.2-14.1-33.9-14.1H192c-35.3 0-64 28.7-64 64V320c0 35.3 28.7 64 64 64zM64 128c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H256c35.3 0 64-28.7 64-64V416H272v32c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16H96V128H64z"/></svg>'),
list(extend = "csv", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="16" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V274.7l-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7V32zM64 352c-35.3 0-64 28.7-64 64v32c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V416c0-35.3-28.7-64-64-64H346.5l-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352H64zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z"/></svg>')) ,
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3A5311', 'color': '#fff'});",
"}")))
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt |>  datatable(
callback=JS('
$("button.buttons-copy").css({
"background": "#81D8D0",
"border": "2px solid #000000",
"color":"white",
"fontweight":"bold",
"border-radius": "10px"
});
$("button.buttons-csv").css({
"background": "#FF7900",
"border": "2px solid #000000",
"border-radius": "10px",
"color":"white",
"fontweight":"bold"
});
return table;
')
,
extensions = c('Buttons', 'Scroller','FixedColumns'),
options = list(
scrollY = 400,
scroller = TRUE,
dom = 'Bfrtip',
scrollX = TRUE,
fixedColumns = TRUE,
buttons = list( list(extend = "copy", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="14" viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M384 336H192c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16l140.1 0L400 115.9V320c0 8.8-7.2 16-16 16zM192 384H384c35.3 0 64-28.7 64-64V115.9c0-12.7-5.1-24.9-14.1-33.9L366.1 14.1c-9-9-21.2-14.1-33.9-14.1H192c-35.3 0-64 28.7-64 64V320c0 35.3 28.7 64 64 64zM64 128c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H256c35.3 0 64-28.7 64-64V416H272v32c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16H96V128H64z"/></svg>'),
list(extend = "csv", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="16" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V274.7l-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7V32zM64 352c-35.3 0-64 28.7-64 64v32c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V416c0-35.3-28.7-64-64-64H346.5l-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352H64zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z"/></svg>')) ,
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3A5311', 'color': '#fff'});",
"}")))
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt |>  datatable(
callback=JS('
$("button.buttons-copy").css({
"background": "#81D8D0",
"border": "2px solid #000000",
"color":"white",
"fontweight":"bold",
"border-radius": "10px"
});
$("button.buttons-csv").css({
"background": "#FF7900",
"border": "2px solid #000000",
"border-radius": "10px",
"color":"white",
"fontweight":"bold"
});
return table;
')
,
extensions = c('Buttons', 'Scroller','FixedColumns'),
options = list(
scrollY = 400,
scroller = TRUE,
dom = 'Bfrtip',
scrollX = TRUE,
fixedColumns = TRUE,
buttons = list( list(extend = "copy", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="14" viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M384 336H192c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16l140.1 0L400 115.9V320c0 8.8-7.2 16-16 16zM192 384H384c35.3 0 64-28.7 64-64V115.9c0-12.7-5.1-24.9-14.1-33.9L366.1 14.1c-9-9-21.2-14.1-33.9-14.1H192c-35.3 0-64 28.7-64 64V320c0 35.3 28.7 64 64 64zM64 128c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H256c35.3 0 64-28.7 64-64V416H272v32c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16H96V128H64z"/></svg>'),
list(extend = "csv", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="16" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V274.7l-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7V32zM64 352c-35.3 0-64 28.7-64 64v32c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V416c0-35.3-28.7-64-64-64H346.5l-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352H64zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z"/></svg>')) ,
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3A5311', 'color': '#fff'});",
"}")))|> formatRound(6:11,0)
example_tsb_model_tbmt
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt |>  datatable(
callback=JS('
$("button.buttons-copy").css({
"background": "#81D8D0",
"border": "2px solid #000000",
"color":"white",
"fontweight":"bold",
"border-radius": "10px"
});
$("button.buttons-csv").css({
"background": "#FF7900",
"border": "2px solid #000000",
"border-radius": "10px",
"color":"white",
"fontweight":"bold"
});
return table;
')
,
extensions = c('Buttons', 'Scroller','FixedColumns'),
options = list(
scrollY = 400,
scroller = TRUE,
dom = 'Bfrtip',
scrollX = TRUE,
fixedColumns = TRUE,
buttons = list( list(extend = "copy", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="14" viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M384 336H192c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16l140.1 0L400 115.9V320c0 8.8-7.2 16-16 16zM192 384H384c35.3 0 64-28.7 64-64V115.9c0-12.7-5.1-24.9-14.1-33.9L366.1 14.1c-9-9-21.2-14.1-33.9-14.1H192c-35.3 0-64 28.7-64 64V320c0 35.3 28.7 64 64 64zM64 128c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H256c35.3 0 64-28.7 64-64V416H272v32c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16H96V128H64z"/></svg>'),
list(extend = "csv", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="16" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V274.7l-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7V32zM64 352c-35.3 0-64 28.7-64 64v32c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V416c0-35.3-28.7-64-64-64H346.5l-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352H64zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z"/></svg>')) ,
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3A5311', 'color': '#fff'});",
"}")))|> formatRound(6:12,0)
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt |>
filter(`Item Code` %in% sample_list)
sample_list<-c(1238, 1234,1271,1247,1246,1272,1239,1258,1260, 1259)
example_mt |> group_by(`Item Code`) |>
summarise( `Avg volume` =mean(Volume)) |>
arrange(-`Avg volume`) |> filter(`Item Code` %in% sample_list)|> datatable()|>formatRound(2,2)
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt |>
filter(`Item Code` %in% sample_list)
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt |>
filter(`Item Code` %in% sample_list) |>
mutate(Category = case_when(
`Item Code` %in% high ~ "High",
`Item Code` %in% middle ~ "Middle",
`Item Code` %in% low ~ "Low"
),
Category =  factor(Category, levels =c("High", "Middle", "Low")))
color_list<- c("#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd", "#8c564b", "#e377c2", "#7f7f7f", "#bcbd22", "#17becf")
high <- c(1238, 1234, 1271)
middle <- c(1247, 1246, 1272, 1239)
low <- c(1258, 1260, 1259)
example_mt<-example_mt |>
filter(`Item Code` %in% sample_list)|>
mutate(Category = case_when(
`Item Code` %in% high ~ "High",
`Item Code` %in% middle ~ "Middle",
`Item Code` %in% low ~ "Low"
),
Category =  factor(Category, levels =c("High", "Middle", "Low")))
p1<-example_mt |>
ggplot(aes(x= Yearmonth ,
y = sqrt(Volume) , linetype=Category ,
color = `Item Code` )) +
geom_line( size =1)+ theme_bw()+facet_wrap(.~Region, nrow =3)+
scale_color_manual(values =color_list)+ labs(title = "The overall movemnent of AMES sample products", y = "The sqrt mutation of Volume", x ="Month")
ggplotly(p1)
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt |>
filter(`Item Code` %in% sample_list) |>
mutate(Category = case_when(
`Item Code` %in% high ~ "High",
`Item Code` %in% middle ~ "Middle",
`Item Code` %in% low ~ "Low"
),
Category =  factor(Category, levels =c("High", "Middle", "Low")))
example_tsb_model_tbmt<-example_tsb_model_tb |>
mutate(var =as.numeric(str_extract(Distribution, "(?<=,\\s)\\d+\\.?\\d*(?:[eE][-+]?\\d+)?")),
sigma =sqrt(var),
low80 =  Volume - 1.282 *sigma,
high80 =  Volume+ 1.282 *sigma,
low90 =  Volume- 1.645*sigma,
high90 =  Volume+ 1.645 *sigma
)
example_tsb_model_tbmt_spl<- example_tsb_model_tbmt |>
filter(`Item Code` %in% sample_list) |>
mutate(Category = case_when(
`Item Code` %in% high ~ "High",
`Item Code` %in% middle ~ "Middle",
`Item Code` %in% low ~ "Low"
),
Category =  factor(Category, levels =c("High", "Middle", "Low")))
example_tsb_model_tbmt_spl
example_tsb_model_tbmt_spl |>
ggplot(aes(Yearmonth,Volume,color = `Item Code`)) +geom_line() +facet_grid(.~Model)
example_tsb_model_tbmt_spl |>
ggplot(aes(Yearmonth,Volume,color = `Item Code`)) +geom_line() +facet_grid(.~Model) +theme_bw()
p4<-example_tsb_model_tbmt_spl |>
ggplot(aes(Yearmonth,Volume,color = `Item Code`)) +geom_line() +facet_grid(.~Model) +theme_bw()
ggplotly(g4)
p4<-example_tsb_model_tbmt_spl |>
ggplot(aes(Yearmonth,Volume,color = `Item Code`)) +geom_line() +facet_grid(.~Model) +theme_bw()
ggplotly(g4)
p4<-example_tsb_model_tbmt_spl |>
ggplot(aes(Yearmonth,Volume,color = `Item Code`)) +geom_line() +facet_grid(.~Model) +theme_bw()
ggplotly(p4)
p4<-example_tsb_model_tbmt_spl |>
ggplot(aes(Yearmonth,Volume,color = `Item Code`)) +geom_line() +facet_grid(.~Model) +theme_bw()+ scale_color_manual(values =color_list)
ggplotly(p4)
p4<-example_tsb_model_tbmt_spl |>
ggplot(aes(Yearmonth,Volume,color = `Item Code`)) +geom_line() +facet_grid(Region~Model) +theme_bw()+ scale_color_manual(values =color_list)
ggplotly(p4)
p4<-example_tsb_model_tbmt_spl |>
ggplot(aes(Yearmonth,Volume,color = `Item Code`)) +geom_line() +facet_grid(Region~Model) +theme_bw()+ scale_color_manual(values =color_list)
ggplotly(p4)|>
layout(legend = list(orientation = 'h'))
example_tsb |>
filter(`Item Code` %in% sample_list)|> model(ETS=ETS(Volume),
ARIMA =ARIMA(Volume)) |>
forecast(h = 2)
example_tsb |>
filter(`Item Code` %in% sample_list)|> model(ETS=ETS(Volume),
ARIMA =ARIMA(Volume))
example_tsb |>
filter(`Item Code` %in% sample_list)|> model(ETS=ETS(Volume),
ARIMA =ARIMA(Volume))|>
forecast(h = 6)
example_tsb_model_tbmt
example_tsb_model_tbmt |> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May")
example_tsb_model_tbmt |> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))
example_tsb_model_tbmt |> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))|> right_join(example_mt)
example_tsb_model_tbmt |> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))|> right_join(example_mt, by=c("Region", "Item Code"))
example_mt
unique(example_mt$`Item Code`)
example_mt
example_mt[ ,1:10]
example_tsb_model_tbmt |> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))|> left_join(example_mt[ ,1:10],by =c("Region","Item Code"))
example_dc_join <- example_tsb_model_tbmt |> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))|> left_join(example_mt[ ,1:10],by =c("Region","Item Code"))
example_dc_join
example_dc_join <- example_tsb_model_tbmt |> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))|> left_join(example_mt[ ,1:10],by =c("Region","Item Code"))
example_dc_join |> mutate( Volume= double(Volume))
example_dc_join <- example_tsb_model_tbmt |> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))|> left_join(example_mt[ ,1:10],by =c("Region","Item Code"))
example_dc_join |> mutate( Volume= as.double(Volume))
example_dc_join <- example_tsb_model_tbmt |> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))|> left_join(.,example_mt[ ,1:10],by =c("Region","Item Code"))
example_tsb_model_tbmt
example_tsb_model_tbmt|> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))
example_tsb_model_filter<- example_tsb_model_tbmt|> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))
left_join(example_tsb_model_filter,example_mt[ ,1:10],by =c("Region","Item Code"))
example_tsb_model_filter<- example_tsb_model_tbmt|> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))
right_join(example_tsb_model_filter,example_mt[ ,1:10],by =c("Region","Item Code"))
example_tsb_model_filter<- example_tsb_model_tbmt|> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))
left_join(example_tsb_model_filter,example_mt[ ,1:10],by =c("Region",`Item Code`))
example_tsb_model_filter<- example_tsb_model_tbmt|> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))
left_join(example_tsb_model_filter,example_mt[ ,1:10],by =c("Region","`Item Code`"))
example_tsb_model_filter<- example_tsb_model_tbmt|> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))
left_join(example_tsb_model_filter,example_mt[ ,1:10],by =c("Region","Item Code"))
example_tsb_model_filter<- example_tsb_model_tbmt|> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))
left_join(example_tsb_model_filter,example_mt[ ,1:10],by =c("Region","Item Code")) |> distinct()
View(example_mt)
example_tsb_model_filter
example_tsb_model_filter<- example_tsb_model_tbmt|> filter(Model =="ETS"& Yearmonth == yearmonth("2024 May"))
left_join(example_tsb_model_filter,example_mt[ ,1:10],by =c("Region","Item Code")) |> distinct()
View(example_mt)
View(example_mt)
example_mt|> filter(`Item code` =="1235")
example_mt|> filter(`Item Code` =="1235")
example_tsb_model_filter
example_tsb_model_tbmt
unique(example_tsb_model_tbmt$`Item Code`)
unique(example_mt$`Item Code`)
View(example_mt)
example_tsb_model_tbmt |>  datatable(
callback=JS('
$("button.buttons-copy").css({
"background": "#81D8D0",
"border": "2px solid #000000",
"color":"white",
"fontweight":"bold",
"border-radius": "10px"
});
$("button.buttons-csv").css({
"background": "#FF7900",
"border": "2px solid #000000",
"border-radius": "10px",
"color":"white",
"fontweight":"bold"
});
return table;
')
,
extensions = c('Buttons', 'Scroller','FixedColumns'),
options = list(
scrollY = 400,
scroller = TRUE,
dom = 'Bfrtip',
scrollX = TRUE,
fixedColumns = TRUE,
buttons = list( list(extend = "copy", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="14" viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M384 336H192c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16l140.1 0L400 115.9V320c0 8.8-7.2 16-16 16zM192 384H384c35.3 0 64-28.7 64-64V115.9c0-12.7-5.1-24.9-14.1-33.9L366.1 14.1c-9-9-21.2-14.1-33.9-14.1H192c-35.3 0-64 28.7-64 64V320c0 35.3 28.7 64 64 64zM64 128c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H256c35.3 0 64-28.7 64-64V416H272v32c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16H96V128H64z"/></svg>'),
list(extend = "csv", text = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="16" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V274.7l-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7V32zM64 352c-35.3 0-64 28.7-64 64v32c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V416c0-35.3-28.7-64-64-64H346.5l-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352H64zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z"/></svg>')) ,
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3A5311', 'color': '#fff'});",
"}")))|> formatRound(6:12,0)
View(example_mt)
View(example_mt)
